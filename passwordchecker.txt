package modification;

import java.util.regex.*;
import java.util.Scanner;

public class PasswordChecker {

   public static void main(String[]args){
       Scanner obj = new Scanner(System.in);
       
       System.out.print("Enter your password: ");
       String password = obj.nextLine();
       
       System.out.print("Confirm your entered password: ");
       String confirmPassword = obj.nextLine();

       if (!password.equals(confirmPassword)){
           System.out.println("Password do not match. Please Try Again.");
           return;
       }
       
       boolean isValid = isPasswordValid(password);
       if(isValid){
            System.out.println("Password is valid. Successfully created.");
        }else{
            System.out.println("Password is invalid. Error to create password.");
        }
   }
    
    public static boolean isPasswordValid(String password){
        
        if (password== null || password.isEmpty()){
            System.out.println("password cannot be empty");
            return false;
        }
        //password length
        if(password.length() < 8 || password.length()>20){
            System.out.println("password must be between 8 to 20 characters");
            return false;
        }
    
        if (!Pattern.compile("[a-z]").matcher(password).find()){
            System.out.println("Password must contain at least one lower case");
            return false;
        }
        
        if (!Pattern.compile("[A-Z]").matcher(password).find()){
            System.out.println("Password must contain at least one upper case");
            return false;
        }
        if (!Pattern.compile("[0-9]").matcher(password).find()){
            System.out.println("Password must contain at least one digit");
            return false;
        }
               
        if (!Pattern.compile("[!@#$%^&*()-_=+?]").matcher(password).find()){
            System.out.println("Password must contain at least one symbol");
            return false;
        }

        return true;
        
    }
}
    
   
    
